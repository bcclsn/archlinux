# Configuration file for libinput-gestures.
#
# The default configuration file exists at /etc/libinput-gestures.conf
# but a user can create a personal custom configuration file at
# ~/.config/libinput-gestures.conf.
#
# Lines starting with '#' and blank lines are ignored.
#
# Each gesture line has 3 [or 4] arguments:
#
# action motion [finger_count] command
#
# where action and motion is either:
#     swipe up
#     swipe down
#     swipe left
#     swipe right
#     pinch in
#     pinch out
#
# command is the remainder of the line and is any valid shell command +
# arguments.
#
# finger_count is a single numeric digit and is optional (and is
# typically 3 or 4). If specified then the command is executed when
# exactly that number of fingers is used in the gesture. If not
# specified then the command is executed when that gesture is executed
# with any number of fingers. Gesture lines specified with finger_count
# have priority over the same gesture specified without any
# finger_count.
#
# Typically command will be xdotool, or wmctrl. See "man xdotool" for
# the many things you can action with that tool. Note that unfortunately
# xdotool does not work with native Wayland clients.
#
# Note the default is an "internal" command that uses wmctrl to switch
# workspaces and, unlike xdotool, works on both Xorg and Wayland (via
# XWayland). It also can be configured for vertical and horizontal
# switching over tabular workspaces, as per the example below. You can
# also add "-w" to the internal command to allow wrapping workspaces.

# Move to next workspace (works for GNOME/KDE/etc on Wayland and Xorg)
#gesture swipe up	_internal ws_up
gesture swipe up	4	xdotool key super+Page_Down

# Move to prev workspace (works for GNOME/KDE/etc on Wayland and Xorg)
#gesture swipe down	_internal ws_down
gesture swipe down	4	xdotool key super+Page_Up

# Browser go forward (works only for Xorg, and Xwayland clients)
gesture swipe left	4	xdotool key alt+Right

# Browser go back (works only for Xorg, and Xwayland clients)
gesture swipe right	4	xdotool key alt+Left 

# Example of 8 static workspaces, e.g. using KDE virtual-desktops,
# arranged in 2 rows of 4 across using swipe up/down/left/right to
# navigate in fixed planes. Must match how you have configured your
# virtual desktops.
#gesture swipe up	_internal --col=2 ws_up
#gesture swipe down	_internal --col=2 ws_down
#gesture swipe left	_internal --row=4 ws_up
#gesture swipe right	_internal --row=4 ws_down

# GNOME SHELL open/close overview (works for GNOME on Wayland and Xorg)
gesture pinch in	3	dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:'Main.overview.toggle();'

#gesture pinch out 	3	dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:'Main.overview.toggle();'

# This application normally automatically determines your touchpad
# device. Some users may have multiple touchpads but by default we use
# only the first one found. However, you can choose to specify the
# explicit device name to use. Run libinput-list-devices to work out the
# name of your device (from the "Device:" field). Then add a device line
# specifying that name, e.g:
#
#device SYNA3105:00 06CB:7EA5 Touchpad
#
# Or you can choose to use ALL touchpad devices by setting the device
# name to "all". This reduces performance slightly so only set this if
# you need to.
#
#device all
